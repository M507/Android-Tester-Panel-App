package com.example.androidpentesterpanel;

import androidx.appcompat.app.AppCompatActivity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Iterator;
import org.json.JSONException;
import org.json.JSONObject;

public class MainActivity extends AppCompatActivity {

    JSONObject dbJsonObj = null;
    public ListView simpleListView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

    }

    private class GetUrlContentTask extends AsyncTask<String, Integer, String> {
        protected String doInBackground(String... urls) {
            URL url = null;
            try {
                url = new URL(urls[0]);
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
            HttpURLConnection connection = null;
            try {
                connection = (HttpURLConnection) url.openConnection();
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                connection.setRequestMethod("GET");
            } catch (ProtocolException e) {
                e.printStackTrace();
            }

            connection.setDoOutput(true);
            connection.setConnectTimeout(5000);
            connection.setReadTimeout(5000);
            try {
                connection.connect();
            } catch (IOException e) {
                e.printStackTrace();
            }
            BufferedReader rd = null;
            try {
                rd = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            } catch (IOException e) {
                e.printStackTrace();
            }
            String content = "", line = null;
            while (true) {
                try {
                    if (!((line = rd.readLine()) != null)) break;
                } catch (IOException e) {
                    e.printStackTrace();
                }
                content += line + "\n";
            }
            return content;
        }

        protected void onProgressUpdate(Integer... progress) {
        }

        protected void onPostExecute(String result) {
            // this is executed on the main thread after the process is over
            // update your UI here
            //displayMessage(result);
            Toast.makeText(getApplicationContext(),
                    result,
                    Toast.LENGTH_LONG)
                    .show();
            updateList(result);

        }
    }

    public void pullMethod(View vObj){
        //vObj.setEnabled(false);
        //Button button = (Button) vObj;
        Toast.makeText(getApplicationContext(),
                "Clicked!",
                Toast.LENGTH_LONG)
                .show();
        String ip = "";
        EditText myEditText =  (EditText) findViewById(R.id.ip);
        ip = myEditText.getText().toString();
        new GetUrlContentTask().execute(ip+"/Android-PenTester-Panel-list.json");
    }

    public void RunAsRoot(String command) {
        Process sh = null;
        try {
            // Get Root
            sh = Runtime.getRuntime().exec("su", null, null);
        } catch (IOException e) {
            e.printStackTrace();
        }
        OutputStream os = sh.getOutputStream();
        try {
            // Send
            os.write((command).getBytes("ASCII"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        try {
            os.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
        try {
            os.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        try {
            sh.waitFor();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    public void execute_command(String command){
        String output = "";
        Toast.makeText(getApplicationContext(),
                "Command: "+ command,
                Toast.LENGTH_LONG)
                .show();

        RunAsRoot(command);
        Toast.makeText(getApplicationContext(),
                "Executed"+ output,
                Toast.LENGTH_LONG)
                .show();
    }

    public void updateList(String content){
        //Simple List
        simpleListView = (ListView) findViewById(R.id.listDefault);
        ArrayList<String> arrayList = new ArrayList<>();

        try {
            dbJsonObj = new JSONObject(content);
        } catch (JSONException e) {
            e.printStackTrace();
        }

        Iterator<String> iter = dbJsonObj.keys();
        while (iter.hasNext()) {
            String key = iter.next();
            // key, dbJsonObj.get(key);
            arrayList.add(key);

        }

        ArrayAdapter adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, arrayList);
        simpleListView.setAdapter(adapter);

        simpleListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position_i, long id) {
                try {
                    execute_command(String.valueOf(dbJsonObj.get(arrayList.get(position_i))));
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        });

    }
}